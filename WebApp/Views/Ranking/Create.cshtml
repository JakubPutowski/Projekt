@model WebApp.Models.ViewModels.UniversityRankingViewModel
@{
ViewData["Title"] = "Add University Ranking";
}

<h2>Add University Ranking</h2>

<form asp-action="Create" method="post">
    <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
    <input type="hidden" asp-for="UniversityId" value="@ViewBag.UniversityId"/>

    <div class="form-group">
        <label asp-for="RankingId">Ranking System</label>
        <select asp-for="RankingId" class="form-control" id="rankingSelect">
            <option value="">-- Select a Ranking System --</option>
            @foreach (var system in ViewBag.RankingSystems as List<WebApp.Models.University.RankingSystem>)
            {
                <option value="@system.Id">@system.SystemName</option>
            }
        </select>
        <span asp-validation-for="RankingId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CriterionId">Ranking Criterion</label>
        <select asp-for="CriterionId" class="form-control" id="criteriaSelect">
            <option value="">-- Select a Criterion --</option>
        </select>
        <span asp-validation-for="CriterionId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Year"></label>
        <input asp-for="Year" class="form-control"/>
        <span asp-validation-for="Year" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Score"></label>
        <input asp-for="Score" class="form-control"/>
        <span asp-validation-for="Score" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Add Ranking</button>
</form>

<div>
    <a asp-action="Details" asp-route-universityId="@ViewBag.UniversityId">Back to Details</a>
</div>

@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script>
    document.getElementById('rankingSelect').addEventListener('change', function () {
        var rankingId = this.value;
        var criteriaSelect = document.getElementById('criteriaSelect');

        // Clear existing options
        criteriaSelect.innerHTML = '<option value="">-- Select a Criterion --</option>';

        if (rankingId) {
            // Fetch criteria for the selected ranking
            fetch(`/Ranking/GetCriteriaByRanking?rankingId=${rankingId}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(function (criterion) {
                        var option = document.createElement('option');
                        option.value = criterion.id;
                        option.textContent = criterion.criteriaName;
                        criteriaSelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching criteria:', error));
        }
    });
</script>
}